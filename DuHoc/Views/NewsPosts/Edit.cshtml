@model DuHoc.Models.NewsPost

@{
    ViewData["Title"] = "Edit";
}
@{
    Layout = "_Layout_Admin";
}

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">

            <h1>Edit</h1>

            <h4>NewsPost</h4>
            <hr />
            <div class="row">
                <div class="col-md-4">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="News_Id" />
                        <div class="form-group">
                            <label asp-for="Title" class="control-label"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="TimePosted" class="control-label"></label>
                            <input asp-for="TimePosted" class="form-control" />
                            <span asp-validation-for="TimePosted" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="UserPosted" class="control-label"></label>
                            <input asp-for="UserPosted" class="form-control" />
                            <span asp-validation-for="UserPosted" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Content" class="control-label"></label>
                            <textarea asp-for="Content" class="form-control tinymce"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Images" class="control-label"></label>
                            <input asp-for="Images" class="form-control" />
                            <span asp-validation-for="Images" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>

            <div>
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>
<script>
    tinymce.init({
        selector: 'textarea',
        plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
        ],
        ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        tinymce.init({
            selector: '.tinymce',
            plugins: 'link image code',
            toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | code',
            menubar: false
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var createAtInput = document.querySelector("#TimePosted");
        if (createAtInput) {
            var vietnamTime = luxon.DateTime.now().setZone("Asia/Ho_Chi_Minh").toISO();
            timePostedInput.value = vietnamTime.slice(0, 19).replace("T", " ");
            timePostedInput.setAttribute("readonly", true);
        }
    });
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
